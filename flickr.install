<?php
/**
 * @file
 * The Flickr database schema, update and install hooks.
 */

/**
 * Implements hook_install().
 */
function flickr_install() {
  if (module_exists('colorbox')) {
    config_set('flickr.settings', 'flickr_class', 'colorbox');
    config_set('flickr.settings', 'flickr_rel', 'gallery-all');
    config_set('colorbox.settings', 'colorbox_inline', 1);
  }
  elseif (module_exists('lightbox2')) {
    config_set('flickr.settings', 'flickr_rel', 'lightbox[gallery]');
  }
}

/**
 * Implements hook_schema().
 */
function flickr_schema() {
  $schema['flickr_users'] = array(
    'description' => 'Connects Drupal users to their Flickr accounts.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Primary Key: Drupal user ID',
      ),
      'nsid' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Flickr NSID',
      ),
      'identifier' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Flickr identifier',
      ),
    ),
    'primary key' => array('uid'),
  );
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function flickr_update_last_removed() {
  return 7103;
}

/**
 * Move flickr settings from variables to config.
 */
function flickr_update_1000() {
  // Migrate variables to config.
  $config = config('flickr.settings');
  $config->set('flickr_api_key', update_variable_get('flickr_api_key', ''));
  $config->set('flickr_api_secret', update_variable_get('flickr_api_secret', ''));
  $config->set('flickr_cache_duration', update_variable_get('flickr_cache_duration', 3600));
  $config->set('flickr_cc', update_variable_get('flickr_cc', 0));
  $config->set('flickr_class', update_variable_get('flickr_class', ''));
  $config->set('flickr_css', update_variable_get('flickr_css', 1));
  $config->set('flickr_curl', update_variable_get('flickr_curl', 0));
  $config->set('flickr_curl2', update_variable_get('flickr_curl2', 0));
  $config->set('flickr_debug', update_variable_get('flickr_debug', 0));
  $config->set('flickr_default_size_album', update_variable_get('flickr_default_size_album', 's'));
  $config->set('flickr_default_userid', update_variable_get('flickr_default_userid', ''));
  $config->set('flickr_opening_size', update_variable_get('flickr_opening_size', ''));
  $config->set('flickr_per_page', update_variable_get('flickr_per_page', 100));
  $config->set('flickr_photos_per_page', update_variable_get('flickr_photos_per_page', 6));
  $config->set('flickr_rel', update_variable_get('flickr_rel', ''));
  $config->set('flickr_title_suppress_on_small', update_variable_get('flickr_title_suppress_on_small', '100'));
  $config->set('flickr_metadata_suppress_on_small', update_variable_get('flickr_metadata_suppress_on_small', '150'));
  $config->set('flickr_license', update_variable_get('flickr_license', 1));
  $config->set('flickr_restrict', update_variable_get('flickr_restrict', 1));
  $config->set('flickr_extend', update_variable_get('flickr_extend', 1));
  $config->set('flickr_counter', update_variable_get('flickr_counter', 1));
  $config->set('flickr_maps', update_variable_get('flickr_maps', 0));
  $config->set('flickr_smart', update_variable_get('flickr_smart', 1));
  $config->set('flickr_date_format_image_title', update_variable_get('flickr_date_format_image_title', 'medium'));
  $config->set('flickr_date_format_image_caption', update_variable_get('flickr_date_format_image_caption', 'interval'));
  $config->set('flickr_date_format_image_caption_hover', update_variable_get('flickr_date_format_image_caption_hover', 'long'));
  $config->set('flickr_date_format_album_title', update_variable_get('flickr_date_format_album_title', 'short'));
  $config->set('flickr_info_overlay', update_variable_get('flickr_info_overlay', array(
    "title",
    "metadata",
    "description",
    0,
  )));
  $config->set('flickr_geophp', update_variable_get('flickr_geophp', array(
    "title",
    0,
  )));
  $config->save();

  // Delete variables.
  update_variable_del('flickr_api_key');
  update_variable_del('flickr_api_secret');
  update_variable_del('flickr_cache_duration');
  update_variable_del('flickr_cc');
  update_variable_del('flickr_class');
  update_variable_del('flickr_css');
  update_variable_del('flickr_curl');
  update_variable_del('flickr_curl2');
  update_variable_del('flickr_debug');
  update_variable_del('flickr_default_size_album');
  update_variable_del('flickr_default_userid');
  update_variable_del('flickr_opening_size');
  update_variable_del('flickr_per_page');
  update_variable_del('flickr_photos_per_page');
  update_variable_del('flickr_rel');
  update_variable_del('flickr_title_suppress_on_small');
  update_variable_del('flickr_metadata_suppress_on_small');
  update_variable_del('flickr_license');
  update_variable_del('flickr_restrict');
  update_variable_del('flickr_extend');
  update_variable_del('flickr_counter');
  update_variable_del('flickr_maps');
  update_variable_del('flickr_smart');
  update_variable_del('flickr_date_format_image_title');
  update_variable_del('flickr_date_format_image_caption');
  update_variable_del('flickr_date_format_image_caption_hover');
  update_variable_del('flickr_date_format_album_title');
  update_variable_del('flickr_info_overlay');
  update_variable_del('flickr_geophp');
}
