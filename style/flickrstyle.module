<?php
/**
 * @file
 * The Flickr Style module.
 */

  // Load flickrstyle.admin.inc from the flickrstyle module.
  module_load_include('inc', 'flickrstyle', 'flickrstyle.admin');

/**
 * Implements hook_config_info().
 */
function flickrstyle_config_info() {
  $prefixes['flickrstyle.settings'] = array(
    'label' => t('Flickr Style settings'),
    'group' => t('Flickr'),
  );
  return $prefixes;
}

/**
 * Implements hook_init().
 */
function flickrstyle_init() {
  // Determine the settings which CSS files to use.
  if (config_get('flickr.settings', 'flickr_css')) {
    $styles = config_get('flickrstyle.settings', 'flickrstyle_styles');
    if (gettype($styles['rounded']) != 'integer') {
      backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_rounded.css', array(
        'group' => CSS_DEFAULT,
        'every_page' => TRUE,
      ));
    }
    if (gettype($styles['shadow']) != 'integer') {
      backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_shadow.css', array(
        'group' => CSS_DEFAULT,
        'every_page' => TRUE,
      ));
    }
    if (gettype($styles['border']) != 'integer' && gettype($styles['shadow']) != 'integer') {
      backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_border.css', array(
        'group' => CSS_DEFAULT,
        'every_page' => TRUE,
      ));
    }
    elseif (gettype($styles['border']) != 'integer') {
      backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_bordernoshadow.css', array(
        'group' => CSS_DEFAULT,
        'every_page' => TRUE,
      ));
    }
    switch (config_get('flickrstyle.settings', 'flickrstyle_caption')) {
      case 1:
        if (gettype($styles['shadow']) != 'integer') {
          backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_caption_shadow.css', array(
            'group' => CSS_DEFAULT,
            'every_page' => TRUE,
          ));
        }
        else {
          backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_caption_border.css', array(
            'group' => CSS_DEFAULT,
            'every_page' => TRUE,
          ));
        }
        break;

      case 2:
        if (gettype($styles['shadow']) != 'integer') {
          backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_wrapcaption_shadow.css', array(
            'group' => CSS_DEFAULT,
            'every_page' => TRUE,
          ));
        }
        else {
          backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_wrapcaption_border.css', array(
            'group' => CSS_DEFAULT,
            'every_page' => TRUE,
          ));
        }
        break;
    }
    if (config_get('flickrstyle.settings', 'flickrstyle_nostyle')) {
      backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_nostyle.css', array(
        'group' => CSS_DEFAULT,
        'every_page' => TRUE,
      ));
    }
    switch (config_get('flickrstyle.settings', 'flickrstyle_emphasize')) {
      case 1:
        backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_enlarge.css', array(
          'group' => CSS_DEFAULT,
          'every_page' => TRUE,
        ));
        break;

      case 2:
        backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_big.css', array(
          'group' => CSS_DEFAULT,
          'every_page' => TRUE,
        ));
        break;

      case 3:
        backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_zoom.css', array(
          'group' => CSS_DEFAULT,
          'every_page' => TRUE,
        ));
        break;

      case 4:
        backdrop_add_css(backdrop_get_path('module', 'flickrstyle') . '/css/flickrstyle_magnifier.css', array(
          'group' => CSS_DEFAULT,
          'every_page' => TRUE,
        ));
        break;
    }
  }
}
